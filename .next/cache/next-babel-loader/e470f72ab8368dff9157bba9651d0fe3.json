{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/runner/GroupProjectGYM/pages/search.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { Button, FormControl, Grid, InputLabel, makeStyles, MenuItem, Paper, Select, SelectProps } from '@material-ui/core';\n// import { Field, Form, Formik, useField, useFormikContext } from 'formik';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// \n// // function HomePage() {\n// //   return <div>Welcome to Next.js!</div>\n// // }\n// // export default HomePage\n// var day=0;\n// var time=0;\n// const useStyles = makeStyles((theme) => ({\n//   paper: {\n//     margin: \"auto\",\n//     maxWidth: 400,\n//     padding: theme.spacing(3)\n//   }\n// }));\n// // async function handleClick() {\n// //     alert(\"Searching for occupancy\");\n// // }\n// export async function handleClick(){\n//   if(day==0||time==0){\n//     alert(\"Please select both day and time\")\n//   }\n//   else{\n//     // alert(\"Searching for occupancy on \"+day+\" \"+time);\n//     const{ db }=await connectToDatabase();\n//     const {item}= await db.collection(\"History\").findOne(\n//       {\"Day\":day,\"Time\":time},\n//       {\"Usage\":1}\n//     );\n//     if(result!=null){\n//       const result=item.Usage;\n//       alert(\"The usage on this day is: \"+result);\n//     }\n//     else{\n//       alert(\"Sorry, equipment usage on this day is unavailable\");\n//     }\n//   }\n// }\n// // function handleClick(){\n// //   const result= db.collection(\"History\").findOne(\n// //     {Day:day,Time:time},\n// //     {Usage:1}\n// //   );\n// // }\n// const handleSelectDay = (event) => {\n//     day=event.target.value;\n//     console.log(day);\n//     //console.log(event.target.value); \n// }\n// const handleSelectTime = (event) => {\n//     time=event.target.value;\n//     console.log(time);\n//     //console.log(event.target.value); \n// }\n// export default function Home(){\n//   const classes=useStyles();\n//   return (\n//     <Formik initialValues={{}} onSubmit={()=>{}}>\n//       {({values})=>(\n//         <Form>\n//           <Paper elevation={5} className={classes.paper}>\n//             <Grid container spacing = {3}>\n//               <Grid item xs={12} sm={6}>\n//                 <FormControl fullWidth variant=\"outlined\">\n//                   <InputLabel id=\"search-day\">Day</InputLabel>\n//                   <Select\n//                     labelId=\"search-day\"\n//                     label=\"Day\"\n//                     onChange={handleSelectDay}\n//                   >\n//                     <MenuItem value=\"\">\n//                       <em>None</em>\n//                     </MenuItem>\n//                     <MenuItem value={\"Sunday\"}>Sunday</MenuItem>\n//                     <MenuItem value={\"Monday\"}>Monday</MenuItem>\n//                     <MenuItem value={\"Tuesday\"}>Tuesday</MenuItem>\n//                     <MenuItem value={\"Wednesday\"}>Wednesday</MenuItem>\n//                     <MenuItem value={\"Thursday\"}>Thursday</MenuItem>\n//                     <MenuItem value={\"Friday\"}>Friday</MenuItem>\n//                     <MenuItem value={\"Saturday\"}>Saturday</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12} sm={6}>\n//                 <FormControl fullWidth variant=\"outlined\">\n//                   <InputLabel id=\"search-time\">Time</InputLabel>\n//                   <Select\n//                     labelId=\"search-time\"\n//                     label=\"Time\"\n//                     onChange={handleSelectTime}\n//                   >\n//                     <MenuItem value=\"\">\n//                       <em>None</em>\n//                     </MenuItem>\n//                     <MenuItem value={\"8-10\"}>8am-10am</MenuItem>\n//                     <MenuItem value={\"10-12\"}>10am-12pm</MenuItem>\n//                     <MenuItem value={\"12-2\"}>12pm-2pm</MenuItem>\n//                     <MenuItem value={\"14-4\"}>2pm-4pm</MenuItem>\n//                     <MenuItem value={\"16-18\"}>4pm-6pm</MenuItem>\n//                     <MenuItem value={\"18-20\"}>6pm-8pm</MenuItem>\n//                     <MenuItem value={\"20-22\"}>8pm-10pm</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <Button type=\"submit\" variant=\"contained\" \n//                   color=\"primary\" fullWidth id=\"Search\" \n//                   onClick={()=>handleClick()}\n//                   >Search for Occupancy</Button>\n//               </Grid>\n//             </Grid>\n//           </Paper>\n//         </Form>\n//       )}\n//     </Formik>\n//   );\n// }\nimport { connectToDatabase } from '../util/mongodb';\nvar occupancy = 0;\nexport default function page() {\n  getData();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }\n  }, \"The occupancy is $\", occupancy);\n}\n\nfunction getData() {\n  var _await$connectToDatab, db, _await$db$collection$, item;\n\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(connectToDatabase());\n\n        case 2:\n          _await$connectToDatab = _context.sent;\n          db = _await$connectToDatab.db;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(db.collection(\"History\").findOne({\n            Day: \"Monday\"\n          }));\n\n        case 6:\n          _await$db$collection$ = _context.sent;\n          item = _await$db$collection$.item;\n          occupancy = item.Usage;\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/home/runner/GroupProjectGYM/pages/search.js"],"names":["connectToDatabase","occupancy","page","getData","db","collection","findOne","Day","item","Usage"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAT,QAAkC,iBAAlC;AAEA,IAAIC,SAAS,GAAC,CAAd;AAEA,eAAe,SAASC,IAAT,GAAe;AAC5BC,EAAAA,OAAO;AACP,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwBF,SAAxB,CAAP;AACD;;AAED,SAAeE,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACmBH,iBAAiB,EADpC;;AAAA;AAAA;AACSI,UAAAA,EADT,yBACSA,EADT;AAAA;AAAA,2CAEsBA,EAAE,CAACC,UAAH,CAAc,SAAd,EAAyBC,OAAzB,CAAiC;AAACC,YAAAA,GAAG,EAAC;AAAL,WAAjC,CAFtB;;AAAA;AAAA;AAESC,UAAAA,IAFT,yBAESA,IAFT;AAGEP,UAAAA,SAAS,GAACO,IAAI,CAACC,KAAf;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// import { Button, FormControl, Grid, InputLabel, makeStyles, MenuItem, Paper, Select, SelectProps } from '@material-ui/core';\n// import { Field, Form, Formik, useField, useFormikContext } from 'formik';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// \n// // function HomePage() {\n// //   return <div>Welcome to Next.js!</div>\n// // }\n\n// // export default HomePage\n\n// var day=0;\n// var time=0;\n\n// const useStyles = makeStyles((theme) => ({\n//   paper: {\n//     margin: \"auto\",\n//     maxWidth: 400,\n//     padding: theme.spacing(3)\n//   }\n// }));\n\n// // async function handleClick() {\n// //     alert(\"Searching for occupancy\");\n// // }\n\n// export async function handleClick(){\n//   if(day==0||time==0){\n//     alert(\"Please select both day and time\")\n//   }\n//   else{\n//     // alert(\"Searching for occupancy on \"+day+\" \"+time);\n//     const{ db }=await connectToDatabase();\n//     const {item}= await db.collection(\"History\").findOne(\n//       {\"Day\":day,\"Time\":time},\n//       {\"Usage\":1}\n//     );\n//     if(result!=null){\n//       const result=item.Usage;\n//       alert(\"The usage on this day is: \"+result);\n//     }\n//     else{\n//       alert(\"Sorry, equipment usage on this day is unavailable\");\n//     }\n//   }\n// }\n\n// // function handleClick(){\n// //   const result= db.collection(\"History\").findOne(\n// //     {Day:day,Time:time},\n// //     {Usage:1}\n// //   );\n// // }\n  \n  \n\n// const handleSelectDay = (event) => {\n//     day=event.target.value;\n//     console.log(day);\n//     //console.log(event.target.value); \n// }\n\n// const handleSelectTime = (event) => {\n//     time=event.target.value;\n//     console.log(time);\n//     //console.log(event.target.value); \n// }\n\n// export default function Home(){\n//   const classes=useStyles();\n//   return (\n//     <Formik initialValues={{}} onSubmit={()=>{}}>\n//       {({values})=>(\n//         <Form>\n//           <Paper elevation={5} className={classes.paper}>\n//             <Grid container spacing = {3}>\n//               <Grid item xs={12} sm={6}>\n//                 <FormControl fullWidth variant=\"outlined\">\n//                   <InputLabel id=\"search-day\">Day</InputLabel>\n//                   <Select\n//                     labelId=\"search-day\"\n//                     label=\"Day\"\n//                     onChange={handleSelectDay}\n//                   >\n//                     <MenuItem value=\"\">\n//                       <em>None</em>\n//                     </MenuItem>\n//                     <MenuItem value={\"Sunday\"}>Sunday</MenuItem>\n//                     <MenuItem value={\"Monday\"}>Monday</MenuItem>\n//                     <MenuItem value={\"Tuesday\"}>Tuesday</MenuItem>\n//                     <MenuItem value={\"Wednesday\"}>Wednesday</MenuItem>\n//                     <MenuItem value={\"Thursday\"}>Thursday</MenuItem>\n//                     <MenuItem value={\"Friday\"}>Friday</MenuItem>\n//                     <MenuItem value={\"Saturday\"}>Saturday</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12} sm={6}>\n//                 <FormControl fullWidth variant=\"outlined\">\n//                   <InputLabel id=\"search-time\">Time</InputLabel>\n//                   <Select\n//                     labelId=\"search-time\"\n//                     label=\"Time\"\n//                     onChange={handleSelectTime}\n//                   >\n//                     <MenuItem value=\"\">\n//                       <em>None</em>\n//                     </MenuItem>\n//                     <MenuItem value={\"8-10\"}>8am-10am</MenuItem>\n//                     <MenuItem value={\"10-12\"}>10am-12pm</MenuItem>\n//                     <MenuItem value={\"12-2\"}>12pm-2pm</MenuItem>\n//                     <MenuItem value={\"14-4\"}>2pm-4pm</MenuItem>\n//                     <MenuItem value={\"16-18\"}>4pm-6pm</MenuItem>\n//                     <MenuItem value={\"18-20\"}>6pm-8pm</MenuItem>\n//                     <MenuItem value={\"20-22\"}>8pm-10pm</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <Button type=\"submit\" variant=\"contained\" \n//                   color=\"primary\" fullWidth id=\"Search\" \n//                   onClick={()=>handleClick()}\n//                   >Search for Occupancy</Button>\n//               </Grid>\n//             </Grid>\n//           </Paper>\n//         </Form>\n//       )}\n//     </Formik>\n//   );\n// }\nimport { connectToDatabase } from '../util/mongodb'\n\nvar occupancy=0;\n\nexport default function page(){\n  getData();\n  return <div>The occupancy is ${occupancy}</div>\n}\n\nasync function getData(){\n  const {db}=await connectToDatabase();\n  const {item}= await db.collection(\"History\").findOne({Day:\"Monday\"});\n  occupancy=item.Usage;\n}"]},"metadata":{},"sourceType":"module"}