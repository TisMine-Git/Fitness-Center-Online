{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/runner/GroupProjectGYM/pages/search.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { Button, FormControl, Grid, InputLabel, makeStyles, MenuItem, Paper, Select, SelectProps } from '@material-ui/core';\n// import { Field, Form, Formik, useField, useFormikContext } from 'formik';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// \n// // function HomePage() {\n// //   return <div>Welcome to Next.js!</div>\n// // }\n// // export default HomePage\n// var day=0;\n// var time=0;\n// const useStyles = makeStyles((theme) => ({\n//   paper: {\n//     margin: \"auto\",\n//     maxWidth: 400,\n//     padding: theme.spacing(3)\n//   }\n// }));\n// // async function handleClick() {\n// //     alert(\"Searching for occupancy\");\n// // }\n// export async function handleClick(){\n//   if(day==0||time==0){\n//     alert(\"Please select both day and time\")\n//   }\n//   else{\n//     // alert(\"Searching for occupancy on \"+day+\" \"+time);\n//     const{ db }=await connectToDatabase();\n//     const {item}= await db.collection(\"History\").findOne(\n//       {\"Day\":day,\"Time\":time},\n//       {\"Usage\":1}\n//     );\n//     if(result!=null){\n//       const result=item.Usage;\n//       alert(\"The usage on this day is: \"+result);\n//     }\n//     else{\n//       alert(\"Sorry, equipment usage on this day is unavailable\");\n//     }\n//   }\n// }\n// // function handleClick(){\n// //   const result= db.collection(\"History\").findOne(\n// //     {Day:day,Time:time},\n// //     {Usage:1}\n// //   );\n// // }\n// const handleSelectDay = (event) => {\n//     day=event.target.value;\n//     console.log(day);\n//     //console.log(event.target.value); \n// }\n// const handleSelectTime = (event) => {\n//     time=event.target.value;\n//     console.log(time);\n//     //console.log(event.target.value); \n// }\n// export default function Home(){\n//   const classes=useStyles();\n//   return (\n//     <Formik initialValues={{}} onSubmit={()=>{}}>\n//       {({values})=>(\n//         <Form>\n//           <Paper elevation={5} className={classes.paper}>\n//             <Grid container spacing = {3}>\n//               <Grid item xs={12} sm={6}>\n//                 <FormControl fullWidth variant=\"outlined\">\n//                   <InputLabel id=\"search-day\">Day</InputLabel>\n//                   <Select\n//                     labelId=\"search-day\"\n//                     label=\"Day\"\n//                     onChange={handleSelectDay}\n//                   >\n//                     <MenuItem value=\"\">\n//                       <em>None</em>\n//                     </MenuItem>\n//                     <MenuItem value={\"Sunday\"}>Sunday</MenuItem>\n//                     <MenuItem value={\"Monday\"}>Monday</MenuItem>\n//                     <MenuItem value={\"Tuesday\"}>Tuesday</MenuItem>\n//                     <MenuItem value={\"Wednesday\"}>Wednesday</MenuItem>\n//                     <MenuItem value={\"Thursday\"}>Thursday</MenuItem>\n//                     <MenuItem value={\"Friday\"}>Friday</MenuItem>\n//                     <MenuItem value={\"Saturday\"}>Saturday</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12} sm={6}>\n//                 <FormControl fullWidth variant=\"outlined\">\n//                   <InputLabel id=\"search-time\">Time</InputLabel>\n//                   <Select\n//                     labelId=\"search-time\"\n//                     label=\"Time\"\n//                     onChange={handleSelectTime}\n//                   >\n//                     <MenuItem value=\"\">\n//                       <em>None</em>\n//                     </MenuItem>\n//                     <MenuItem value={\"8-10\"}>8am-10am</MenuItem>\n//                     <MenuItem value={\"10-12\"}>10am-12pm</MenuItem>\n//                     <MenuItem value={\"12-2\"}>12pm-2pm</MenuItem>\n//                     <MenuItem value={\"14-4\"}>2pm-4pm</MenuItem>\n//                     <MenuItem value={\"16-18\"}>4pm-6pm</MenuItem>\n//                     <MenuItem value={\"18-20\"}>6pm-8pm</MenuItem>\n//                     <MenuItem value={\"20-22\"}>8pm-10pm</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <Button type=\"submit\" variant=\"contained\" \n//                   color=\"primary\" fullWidth id=\"Search\" \n//                   onClick={()=>handleClick()}\n//                   >Search for Occupancy</Button>\n//               </Grid>\n//             </Grid>\n//           </Paper>\n//         </Form>\n//       )}\n//     </Formik>\n//   );\n// }\nimport { Button, FormControl, Grid, InputLabel, makeStyles, MenuItem, Paper, Select, SelectProps } from '@material-ui/core';\nimport { Field, Form, Formik, useField, useFormikContext } from 'formik';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nvar day = 0;\nvar time = 0;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      margin: \"auto\",\n      maxWidth: 400,\n      padding: theme.spacing(3)\n    }\n  };\n});\n\nfunction handleClick() {\n  return _handleClick.apply(this, arguments);\n} // function handleClick(){\n//   const result= db.collection(\"History\").findOne(\n//     {Day:day,Time:time},\n//     {Usage:1}\n//   );\n// }\n\n\nfunction _handleClick() {\n  _handleClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (day == 0 || time == 0) {\n              alert(\"Please select both day and time\");\n            } else {\n              alert(\"Searching for occupancy on \" + day + \" \" + time); // const item= db.collection(\"History\").findOne(\n              //   {\"Day\":day,\"Time\":time},\n              //   {\"Usage\":1}\n              // );\n              // if(result!=null){\n              //   const result=item.Usage;\n              //   alert(\"The usage on this day is: \"+result);\n              // }\n              // else{\n              //   alert(\"Sorry, equipment usage on this day is unavailable\");\n              // }\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handleClick.apply(this, arguments);\n}\n\nvar handleSelectDay = function handleSelectDay(event) {\n  day = event.target.value;\n  console.log(day); //console.log(event.target.value); \n};\n\nvar handleSelectTime = function handleSelectTime(event) {\n  time = event.target.value;\n  console.log(time); //console.log(event.target.value); \n};\n\nexport default function Home() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  return __jsx(Formik, {\n    initialValues: {},\n    onSubmit: function onSubmit() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, function (_ref) {\n    var values = _ref.values;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, __jsx(Paper, {\n      elevation: 5,\n      className: classes.paper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, __jsx(FormControl, {\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, __jsx(InputLabel, {\n      id: \"search-day\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, \"Day\"), __jsx(Select, {\n      labelId: \"search-day\",\n      label: \"Day\",\n      onChange: handleSelectDay,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, __jsx(MenuItem, {\n      value: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, __jsx(\"em\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 23\n      }\n    }, \"None\")), __jsx(MenuItem, {\n      value: \"Sunday\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, \"Sunday\"), __jsx(MenuItem, {\n      value: \"Monday\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, \"Monday\"), __jsx(MenuItem, {\n      value: \"Tuesday\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, \"Tuesday\"), __jsx(MenuItem, {\n      value: \"Wednesday\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, \"Wednesday\"), __jsx(MenuItem, {\n      value: \"Thursday\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, \"Thursday\"), __jsx(MenuItem, {\n      value: \"Friday\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, \"Friday\"), __jsx(MenuItem, {\n      value: \"Saturday\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, \"Saturday\")))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, __jsx(FormControl, {\n      fullWidth: true,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, __jsx(InputLabel, {\n      id: \"search-time\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, \"Time\"), __jsx(Select, {\n      labelId: \"search-time\",\n      label: \"Time\",\n      onChange: handleSelectTime,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, __jsx(MenuItem, {\n      value: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, __jsx(\"em\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }, \"None\")), __jsx(MenuItem, {\n      value: \"8-10\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, \"8am-10am\"), __jsx(MenuItem, {\n      value: \"10-12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, \"10am-12pm\"), __jsx(MenuItem, {\n      value: \"12-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, \"12pm-2pm\"), __jsx(MenuItem, {\n      value: \"14-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, \"2pm-4pm\"), __jsx(MenuItem, {\n      value: \"16-18\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, \"4pm-6pm\"), __jsx(MenuItem, {\n      value: \"18-20\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, \"6pm-8pm\"), __jsx(MenuItem, {\n      value: \"20-22\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, \"8pm-10pm\")))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      id: \"Search\",\n      onClick: function onClick() {\n        return handleClick();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, \"Search for Occupancy\")))));\n  });\n}\n\n_s(Home, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/runner/GroupProjectGYM/pages/search.js"],"names":["Button","FormControl","Grid","InputLabel","makeStyles","MenuItem","Paper","Select","SelectProps","Field","Form","Formik","useField","useFormikContext","FormHelperText","day","time","useStyles","theme","paper","margin","maxWidth","padding","spacing","handleClick","alert","handleSelectDay","event","target","value","console","log","handleSelectTime","Home","classes","values"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,IAA9B,EAAoCC,UAApC,EAAgDC,UAAhD,EAA4DC,QAA5D,EAAsEC,KAAtE,EAA6EC,MAA7E,EAAqFC,WAArF,QAAwG,mBAAxG;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,gBAAxC,QAAgE,QAAhE;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAIA,IAAIC,GAAG,GAAC,CAAR;AACA,IAAIC,IAAI,GAAC,CAAT;AAEA,IAAMC,SAAS,GAAGb,UAAU,CAAC,UAACc,KAAD;AAAA,SAAY;AACvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,QAAQ,EAAE,GAFL;AAGLC,MAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AAHJ;AADgC,GAAZ;AAAA,CAAD,CAA5B;;SAQeC,W;;EAsBf;AACA;AACA;AACA;AACA;AACA;;;;0EA3BA;AAAA;AAAA;AAAA;AAAA;AACE,gBAAGT,GAAG,IAA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","sourcesContent":["// import { Button, FormControl, Grid, InputLabel, makeStyles, MenuItem, Paper, Select, SelectProps } from '@material-ui/core';\n// import { Field, Form, Formik, useField, useFormikContext } from 'formik';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// \n// // function HomePage() {\n// //   return <div>Welcome to Next.js!</div>\n// // }\n\n// // export default HomePage\n\n// var day=0;\n// var time=0;\n\n// const useStyles = makeStyles((theme) => ({\n//   paper: {\n//     margin: \"auto\",\n//     maxWidth: 400,\n//     padding: theme.spacing(3)\n//   }\n// }));\n\n// // async function handleClick() {\n// //     alert(\"Searching for occupancy\");\n// // }\n\n// export async function handleClick(){\n//   if(day==0||time==0){\n//     alert(\"Please select both day and time\")\n//   }\n//   else{\n//     // alert(\"Searching for occupancy on \"+day+\" \"+time);\n//     const{ db }=await connectToDatabase();\n//     const {item}= await db.collection(\"History\").findOne(\n//       {\"Day\":day,\"Time\":time},\n//       {\"Usage\":1}\n//     );\n//     if(result!=null){\n//       const result=item.Usage;\n//       alert(\"The usage on this day is: \"+result);\n//     }\n//     else{\n//       alert(\"Sorry, equipment usage on this day is unavailable\");\n//     }\n//   }\n// }\n\n// // function handleClick(){\n// //   const result= db.collection(\"History\").findOne(\n// //     {Day:day,Time:time},\n// //     {Usage:1}\n// //   );\n// // }\n  \n  \n\n// const handleSelectDay = (event) => {\n//     day=event.target.value;\n//     console.log(day);\n//     //console.log(event.target.value); \n// }\n\n// const handleSelectTime = (event) => {\n//     time=event.target.value;\n//     console.log(time);\n//     //console.log(event.target.value); \n// }\n\n// export default function Home(){\n//   const classes=useStyles();\n//   return (\n//     <Formik initialValues={{}} onSubmit={()=>{}}>\n//       {({values})=>(\n//         <Form>\n//           <Paper elevation={5} className={classes.paper}>\n//             <Grid container spacing = {3}>\n//               <Grid item xs={12} sm={6}>\n//                 <FormControl fullWidth variant=\"outlined\">\n//                   <InputLabel id=\"search-day\">Day</InputLabel>\n//                   <Select\n//                     labelId=\"search-day\"\n//                     label=\"Day\"\n//                     onChange={handleSelectDay}\n//                   >\n//                     <MenuItem value=\"\">\n//                       <em>None</em>\n//                     </MenuItem>\n//                     <MenuItem value={\"Sunday\"}>Sunday</MenuItem>\n//                     <MenuItem value={\"Monday\"}>Monday</MenuItem>\n//                     <MenuItem value={\"Tuesday\"}>Tuesday</MenuItem>\n//                     <MenuItem value={\"Wednesday\"}>Wednesday</MenuItem>\n//                     <MenuItem value={\"Thursday\"}>Thursday</MenuItem>\n//                     <MenuItem value={\"Friday\"}>Friday</MenuItem>\n//                     <MenuItem value={\"Saturday\"}>Saturday</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12} sm={6}>\n//                 <FormControl fullWidth variant=\"outlined\">\n//                   <InputLabel id=\"search-time\">Time</InputLabel>\n//                   <Select\n//                     labelId=\"search-time\"\n//                     label=\"Time\"\n//                     onChange={handleSelectTime}\n//                   >\n//                     <MenuItem value=\"\">\n//                       <em>None</em>\n//                     </MenuItem>\n//                     <MenuItem value={\"8-10\"}>8am-10am</MenuItem>\n//                     <MenuItem value={\"10-12\"}>10am-12pm</MenuItem>\n//                     <MenuItem value={\"12-2\"}>12pm-2pm</MenuItem>\n//                     <MenuItem value={\"14-4\"}>2pm-4pm</MenuItem>\n//                     <MenuItem value={\"16-18\"}>4pm-6pm</MenuItem>\n//                     <MenuItem value={\"18-20\"}>6pm-8pm</MenuItem>\n//                     <MenuItem value={\"20-22\"}>8pm-10pm</MenuItem>\n//                   </Select>\n//                 </FormControl>\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <Button type=\"submit\" variant=\"contained\" \n//                   color=\"primary\" fullWidth id=\"Search\" \n//                   onClick={()=>handleClick()}\n//                   >Search for Occupancy</Button>\n//               </Grid>\n//             </Grid>\n//           </Paper>\n//         </Form>\n//       )}\n//     </Formik>\n//   );\n// }\n\n\nimport { Button, FormControl, Grid, InputLabel, makeStyles, MenuItem, Paper, Select, SelectProps } from '@material-ui/core';\nimport { Field, Form, Formik, useField, useFormikContext } from 'formik';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\n\n\nvar day=0;\nvar time=0;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: \"auto\",\n    maxWidth: 400,\n    padding: theme.spacing(3)\n  }\n}));\n\nasync function handleClick(){\n  if(day==0||time==0){\n    alert(\"Please select both day and time\")\n  }\n  else{\n    alert(\"Searching for occupancy on \"+day+\" \"+time);\n\n\n    // const item= db.collection(\"History\").findOne(\n    //   {\"Day\":day,\"Time\":time},\n    //   {\"Usage\":1}\n    // );\n    // if(result!=null){\n    //   const result=item.Usage;\n    //   alert(\"The usage on this day is: \"+result);\n    // }\n    // else{\n    //   alert(\"Sorry, equipment usage on this day is unavailable\");\n    // }\n  }\n}\n\n// function handleClick(){\n//   const result= db.collection(\"History\").findOne(\n//     {Day:day,Time:time},\n//     {Usage:1}\n//   );\n// }\n  \n  \n\nconst handleSelectDay = (event) => {\n    day=event.target.value;\n    console.log(day);\n    //console.log(event.target.value); \n}\n\nconst handleSelectTime = (event) => {\n    time=event.target.value;\n    console.log(time);\n    //console.log(event.target.value); \n}\n\nexport default function Home(){\n  const classes=useStyles();\n  return (\n    <Formik initialValues={{}} onSubmit={()=>{}}>\n      {({values})=>(\n        <Form>\n          <Paper elevation={5} className={classes.paper}>\n            <Grid container spacing = {3}>\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth variant=\"outlined\">\n                  <InputLabel id=\"search-day\">Day</InputLabel>\n                  <Select\n                    labelId=\"search-day\"\n                    label=\"Day\"\n                    onChange={handleSelectDay}\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={\"Sunday\"}>Sunday</MenuItem>\n                    <MenuItem value={\"Monday\"}>Monday</MenuItem>\n                    <MenuItem value={\"Tuesday\"}>Tuesday</MenuItem>\n                    <MenuItem value={\"Wednesday\"}>Wednesday</MenuItem>\n                    <MenuItem value={\"Thursday\"}>Thursday</MenuItem>\n                    <MenuItem value={\"Friday\"}>Friday</MenuItem>\n                    <MenuItem value={\"Saturday\"}>Saturday</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth variant=\"outlined\">\n                  <InputLabel id=\"search-time\">Time</InputLabel>\n                  <Select\n                    labelId=\"search-time\"\n                    label=\"Time\"\n                    onChange={handleSelectTime}\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={\"8-10\"}>8am-10am</MenuItem>\n                    <MenuItem value={\"10-12\"}>10am-12pm</MenuItem>\n                    <MenuItem value={\"12-2\"}>12pm-2pm</MenuItem>\n                    <MenuItem value={\"14-4\"}>2pm-4pm</MenuItem>\n                    <MenuItem value={\"16-18\"}>4pm-6pm</MenuItem>\n                    <MenuItem value={\"18-20\"}>6pm-8pm</MenuItem>\n                    <MenuItem value={\"20-22\"}>8pm-10pm</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <Button type=\"submit\" variant=\"contained\" \n                  color=\"primary\" fullWidth id=\"Search\" \n                  onClick={()=>handleClick()}\n                  >Search for Occupancy</Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Form>\n      )}\n    </Formik>\n  );\n}"]},"metadata":{},"sourceType":"module"}